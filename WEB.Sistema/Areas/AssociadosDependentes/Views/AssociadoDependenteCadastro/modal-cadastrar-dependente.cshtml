@using BLL.ConfiguracoesTextos.Extensions
@using DAL.Configuracoes.Const
@using DAL.ConfiguracoesAssociados
@using DAL.Permissao.Security.Extensions
@using MvcFlashMessages
@using WEB.Areas.ConfiguracoesAssociados.Helpers
@model WEB.Areas.AssociadosDependentes.ViewModels.AssociadoDependenteCadastroForm

@{
    Layout = "~/views/shared/associatec/masterpage-modal.cshtml";
    ViewBag.modalWidthClass = "lg";
    ViewBag.modalTitle = Model.Associado.id == 0 ? "Novo "+Html.labelTexto(User.idOrganizacao(), "lbldependente", "Dependente") : $"Editar "+Html.labelTexto(User.idOrganizacao(), "lbldependente", "Dependente")+" - {Model.Associado.Pessoa.nome}";
}

<div class="row" id="boxModelAdicionarDependente">
    <div class="col-sm-12">
        <div class="nav-tabs-custom">
            <ul class="nav nav-tabs" id="tabs">
                <li class="active"><a href="#tab-dados-cadastrais-dependente" data-toggle="tab">Dados Cadastrais</a></li>
            </ul>
            <div class="clearfix"></div>
            <div class="tab-content">
                <div class="tab-pane active" id="@(IsPost ? "" : "tab-dados-cadastrais-dependente")">
                    @Html.RenderFlash()
                    <div class="row">
                        @using (Ajax.BeginForm("salvarCadastroDependente", null, new { }, new AjaxOptions { HttpMethod = "POST", UpdateTargetId = "tab-dados-cadastrais-dependente", InsertionMode = InsertionMode.Replace, OnSuccess = "AssociadoDependenteCadastroModal.onSuccessForm" }, new { @class = "" })) {

                            @Html.ValidationSummary(false)
                            @Html.HiddenFor(m => m.Associado.id)


                            if (Model.listaGrupos.Any()) {
                                foreach (var OGrupo in Model.listaGrupos) {
                                    @boxGrupoCampos(OGrupo)
                                }
                                <div class="clearfix"></div><br />
                                <div class="col-sm-12">
                                    <p class="text-right">
                                        @Html.botaoSalvar()
                                    </p>
                                </div>
                            } else {
                                <div class="col-sm-12">
                                    <div class="alert alert-warning">
                                        <div class="text-center">Não existem configurações de cadastro disponíveis.</div>
                                    </div>
                                </div>
                            }
                            <div class="clearfix"></div><br />
                        }
                    </div>
                </div>
            </div>
            <div class="clearfix"></div>
        </div>
    </div>
</div>

@helper boxGrupoCampos(ConfiguracaoAssociadoCampoGrupo OGrupo) {

    var listaCampos = Model.listaCampos.Where(x => x.idAssociadoCampoGrupo == OGrupo.id).ToList();

    <div class="@(OGrupo.cssBoxGrupo.isEmpty() ? "col-sm-12" : OGrupo.cssBoxGrupo)">
        <h4 class="separator-form">@OGrupo.descricao</h4>

        <div class="row">
            @foreach (var OCampo in listaCampos) {
                @boxCampo(OCampo)
            }
        </div>
    </div>
    @Html.Raw(OGrupo.htmlAposBox)
}

@helper boxCampo(ConfiguracaoAssociadoCampo OCampo) {

    if (OCampo.idTipoCampo == ConfiguracaoTipoCampoConst.HIDDEN) {
        @Html.buildField(OCampo, false)
        return;
    }

    <div class="@OCampo.cssClassBox">
        @(OCampo.flagObrigatorio == true ? Html.labelRequired(OCampo.label) : Html.Label(OCampo.label))

        @Html.buildField(OCampo, false)
        @if (!OCampo.textoInstrucoes.isEmpty()) {
            @Html.instrucao(OCampo.textoInstrucoes)
        }
        @Html.Raw(OCampo.htmlAposCampo)
    </div>

    @Html.Raw(OCampo.htmlAfterBox)
}