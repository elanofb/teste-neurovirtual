@model WEB.Areas.Publicacoes.ViewModels.BannerForm

@using DAL.Entities
@using DAL.Permissao.Security.Extensions
@using WEB.Areas.Arquivos.Helpers
@using WEB.Areas.Associacoes.Helpers
@using WEB.Areas.Portais.Helpers
@using WEB.Areas.Publicacoes.Helpers

@{
    Layout = "~/views/shared/associatec/masterpage-edit.cshtml";
    ViewBag.titlePage = "Banner";
    ViewBag.subTituloPagina = Model.Banner.descricao;
}
	
@section styles{
	@Html.includeCSSModuloArquivos()
}

@section scripts{
	
	@Html.includeDatePicker()
	
	@Html.includeJSModuloArquivosFotos()
}

@section navTabs{
    <ul class="nav nav-tabs">
        <li class="active"><a href="#tab-1" data-toggle="tab">Principal</a></li>
    </ul>
}

@section tabContent{

    @Html.infoCadastro(Model.Banner.id, Model.Banner.dtCadastro, Model.Banner.dtAlteracao)

    <div id="tab-1" class="tab-pane active">

        @using (Html.BeginForm("editar", null, FormMethod.Post, new { enctype = "multipart/form-data" })) {
            
			@Html.HiddenFor(m => m.Banner.id, new { id = "id" })

			{ Html.EnableClientValidation(false); }

			@Html.ValidationSummary(true, "Alguns campos não foram validados.");
			
	        <div class="row">
	        
		        <div class="col-md-7">
				
			        <h4 class="separator-form">Dados Principais do Banner</h4>
			        
			        <div class="row">
					
				        @if(User.idOrganizacao() == 0) {
						
					        <div class="col-sm-4">
						        <label>Organização</label>
						        @Html.DropDownListFor(m => m.Banner.idOrganizacao, AssociacaoHelper.getInstance.selectList(Model.Banner.idOrganizacao), "Padrão", new {@class = "form-control input-sm"})
					        </div>
                
				        }
					
				        <div class="col-md-6">
					        
					        <label>Período de Exibição</label>
					        
					        <div class="input-group">
						        @Html.TextBoxFor(m => m.Banner.dtInicioExibicao, new { @class = "form-control input-sm input-datepicker", alt = "date" })
						        <span class="input-group-addon">-</span>
						        @Html.TextBoxFor(m => m.Banner.dtFimExibicao, new { @class = "form-control input-sm input-datepicker", alt = "date" })
					        </div>
					        @Html.ValidationMessageFor(m => m.Banner.dtInicioExibicao)
					        @Html.ValidationMessageFor(m => m.Banner.dtFimExibicao)
					        
				        </div>
				        <div class="clearfix"></div>
					
				        <div class="col-xs-12">
					        @Html.Label("Informe uma descrição para o banner")
					        @Html.TextBoxFor(x => x.Banner.descricao, new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(x => x.Banner.descricao)
				        </div>
				        <div class="clearfix"></div>
					
				        <div class="col-md-8">
					        <label>Link do banner</label>
					        @Html.TextBoxFor(x => x.Banner.linkBanner, new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(x => x.Banner.linkBanner)
					        @Html.instrucao("Ex: http://www.sinctec.com.br")
				        </div>

				        <div class="col-md-4">
					        @Html.labelRequired("Local do banner")
					        @Html.DropDownListFor(m => m.Banner.posicao, BannerHelper.selectListPosicao(UtilRequest.getString("posicaoBanner")), "", new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(m => m.Banner.posicao)
				        </div>
				        <div class="clearfix"></div>
				        
				        <div class="col-sm-4">
					        @Html.Label("Portal")
					        @Html.DropDownListFor(m => m.Banner.idPortal, PortalHelper.getInstance.selectList(Model.Banner.idPortal), "...", new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(x => x.Banner.idPortal)
				        </div>
					
				        <div class="col-sm-4">
					        @Html.labelRequired("Abrir em nova janela?")
					        @Html.DropDownListFor(m => m.Banner.flagBlank, ComboHelper.selectListYesNo(Model.Banner.flagBlank), "...", new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(x => x.Banner.flagBlank)
				        </div>
					
				        <div class="col-sm-4">
					        <label>Status</label>
					        @Html.DropDownListFor(m => m.Banner.ativo, ComboHelper.selectListStatus(Model.Banner.ativo), new { @class = "form-control input-sm" })
					        @Html.ValidationMessageFor(m => m.Banner.ativo)
				        </div>
				        <div class="clearfix"></div>
					
			        </div>
				
		        </div>
			
		        <div class="col-md-5">
		        
			        <h4 class="separator-form">Imagens do Banner</h4>
			        
			        @if (Model.Banner.id == 0) {
				        @Html.labelRequired("Imagem")
			        } else {
				        <label>Imagem</label>
			        }

			        @Html.inputFileSimples("OImagem")
			        @Html.ValidationMessageFor(m => m.OImagem)
			        @Html.instrucao("O tamanho da imagem deve ser ao menos 980x310px")
			        <div class="clearfix"></div><br />

			        @if (Model.Banner.id > 0) {
				        <div class="content-load carregando" id="boxArquivosListar" data-target="boxArquivosListar" data-url="@Url.Action("partial-lista-fotos", "ArquivoFoto", new { area = "Arquivos", entidade = EntityTypes.BANNER, idReferencia = Model.Banner.id })"></div>
			        }
		        
		        </div>
		        <div class="clearfix"></div><br /><br />
		        
	        </div>
	        
			<div class="text-right">
				@Html.exibirBotoesFormulario(Url.Action("listar"), "N")
			</div>
        }

    </div>
    <div class="clearfix"></div>
}

