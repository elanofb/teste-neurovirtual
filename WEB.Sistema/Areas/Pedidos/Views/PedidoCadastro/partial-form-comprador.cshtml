@model WEB.Areas.Pedidos.ViewModels.PedidoCadastroForm

@using BLL.ConfiguracoesTextos.Extensions
@using DAL.Permissao.Security.Extensions
@using WEB.Areas.Pedidos.Helpers

<div class="box box-primary">
        
    <div class="box-header with-border">
            
        <h3 class="box-title">
            <i class="fa fa-user"></i> Dados do Comprador
        </h3>

    </div>
        
    <div class="box-body">
            
        @Html.legendaRequired()
    
        @Html.ValidationSummary(false)
            
        <div id="boxDadosComprador" class="@(Model.Pedido.idPessoa > 0 ? "box-no-editable" : "") padding-bottom-10">

            @Html.HiddenFor(m => m.Pedido.idAssociado, new { id = "idAssociado" })
            
            @Html.HiddenFor(m => m.Pedido.idNaoAssociado, new { id = "idNaoAssociado" })
            
            <div class="col-xs-8">
                @Html.labelRequired("Comprador")
                @Html.DropDownListFor(m => m.Pedido.idPessoa, CompradorHelper.getInstance.selectListAssociadoNaoAssociado(Model.Pedido.idPessoa), "Digite o nome...", new {@class = "form-control input-sm", id = "idPessoa", onchange = "PedidoCadastro.carregarPessoa(this.value)" })
                @Html.ValidationMessageFor(m => m.Pedido.idPessoa)
            </div>
            
            <div class="col-xs-4">
                <label> CPF/CNPJ</label>
                @Html.TextBox("nroDocumento", null, new { @class = "form-control input-sm", id = "cpfCliente", alt = "cpf" }.isReadOnly(true))
            </div>
            <div class="clearfix"></div>

            <div class="col-xs-4">
                <label> Telefone Principal </label>
                @Html.TextBox("telPrincipal", null, new { @class = "form-control input-sm", id = "telPrincipal"}.isReadOnly(true))
            </div>
            <div class="col-xs-4">
                <label> Telefone Secundário </label>
                @Html.TextBox("telSecundario", null, new { @class = "form-control input-sm", id = "telSecundario"}.isReadOnly(true))
            </div>
            <div class="col-xs-2">
                <label>Status</label>
                @Html.TextBox("statusAssociado", null, new { @class = "form-control input-sm", id = "statusAssociado" }.isReadOnly(true))
            </div>
            <div class="col-xs-2 nao-exibir dado-associado">
                <label>Situação</label>
                @Html.TextBox("situacao", null, new {@class = "form-control input-sm", id = "situacaoAssociado"}.isReadOnly(true))
            </div>

            <div class="clearfix"></div>

            <div class="col-md-4">
                <label>@Html.labelTexto(User.idOrganizacao(), "emailPrincipal", "E-mail Principal")</label>
                @Html.TextBox("emailPrincipal", null, new { @class = "form-control input-sm", id = "emailPrincipal" }.isReadOnly(true))
            </div>

            <div class="col-md-4">
                <label>@Html.labelTexto(User.idOrganizacao(), "emailSecundario", "E-mail Alternativo")</label>
                @Html.TextBox("emailSecundario", null, new { @class = "form-control input-sm", id = "emailSecundario" }.isReadOnly(true))
            </div>
            <div class="col-xs-2">
                <label>Perfil</label>
                @Html.TextBox("perfil", null, new { @class = "form-control input-sm", id = "descricaoPerfil"}.isReadOnly(true))
            </div>
        
            @if (Model.Pedido.idPessoa.toInt() == 0) {

                <div class="col-xs-2 padtop22 text-right">
                    <button class="btn btn-primary btn-sm link-loading">Continuar <i class="fa fa-arrow-right"></i></button>
                </div>

            }

            <div class="clearfix"></div>

        </div>

    </div>

</div>