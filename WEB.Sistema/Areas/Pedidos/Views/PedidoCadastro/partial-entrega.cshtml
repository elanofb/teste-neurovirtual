@model WEB.Areas.Pedidos.ViewModels.PedidoCadastroForm

<div class="box box-primary">
        
    <div class="box-header with-border">
            
        <h3 class="box-title">
            <i class="fa fa-truck"></i> Dados de Entrega
        </h3>

    </div>
        
    <div class="box-body">
        
        <div class="row">
    
            @Html.HiddenFor(m => m.Pedido.idPais, new{ Value="BRA", id = "idPaisEntrega", rel = "idPaisEnderecoEntrega" })
    
            @Html.HiddenFor(m => m.Pedido.idEstado, new { rel = "idEstadoEnderecoEntrega" })
    
            @Html.HiddenFor(m => m.Pedido.idCidade, new { rel = "idCidadeEnderecoEntrega" })
    
            @Html.HiddenFor(m => m.Pedido.nomeCidade, new { rel = "nomeCidadeEnderecoEntrega" })
    
            @if (Model.Pedido.cepOrigem.LengthNullable() < 8 || Model.Pedido.cep.LengthNullable() < 8) {

                <div class="col-xs-12">
                    <span class="badge bg-yellow">
                        <i class="far fa-exclamation-triangle"></i> Utilize apenas para pedidos que possuem entrega
                    </span>
                    <span class="badge bg-yellow">
                        <i class="far fa-exclamation-triangle"></i> Para realizar o cálculo de frete, você deve informar o CEP de Origem
                    </span>
                </div>
                <div class="clearfix"></div>
            }

            <div class="col-md-6">
                <label>CEP Origem</label>
                @Html.TextBoxFor(m => m.Pedido.cepOrigem, new { @class = "form-control input-sm", alt = "cep", id = "cep-origem-entrega", onblur = "PedidoCadastroFrete.flagAtualizarEndereco = true;" })
                @Html.ValidationMessageFor(m => m.Pedido.cepOrigem)
            </div>
        
            <div class="col-md-6">
                <label>CEP Entrega</label>

                <div class="input-group">
                    @Html.TextBoxFor(m => m.Pedido.cep, new { @class = "form-control input-sm", alt = "cep", autocomplete = "off", id = "cep-entrega", rel = "cepEnderecoEntrega", onblur = "PedidoCadastroFrete.carregarEndereco('EnderecoEntrega', true);" })
                    <span class="input-group-addon"><a href="javascript:void(0);" onclick="PedidoCadastroFrete.carregarEndereco('EnderecoEntrega', true);"><i class="fa fa-search"></i></a></span>
                </div>
                @Html.ValidationMessageFor(m => m.Pedido.cep)
            </div>
            <div class="clearfix"></div>
        
            <div class="col-md-12">
                <label>Endereço</label>
                @Html.TextBoxFor(m => m.Pedido.logradouro, new { @class = "form-control input-sm", maxlength = "100", rel = "logradouroEnderecoEntrega", id = "logradouro-entrega" })
                @Html.ValidationMessageFor(m => m.Pedido.logradouro)
            </div>
            <div class="clearfix"></div>

            <div class="col-md-6">
                <label>Nº</label>
                @Html.TextBoxFor(m => m.Pedido.numero, new { @class = "form-control input-sm", maxlength = "20", id = "numero-entrega" })
                @Html.ValidationMessageFor(m => m.Pedido.numero)
            </div>
        
            <div class="col-md-6">
                <label>Compl.</label>
                @Html.TextBoxFor(m => m.Pedido.complemento, new { @class = "form-control input-sm", maxlength = "20", id = "complemento-entrega" })
                @Html.ValidationMessageFor(m => m.Pedido.complemento)
            </div>
            <div class="clearfix"></div>
        
            <div class="col-md-12">
                <label>Bairro</label>
                @Html.TextBoxFor(m => m.Pedido.bairro, new { @class = "form-control input-sm", id = "bairro-entrega", rel = "bairroEnderecoEntrega" }) 
            </div>
            <div class="clearfix"></div>
 
            <div class="col-md-12">
                <label>Cidade/UF</label>
                @Html.TextBox("nomeCidadeUF", String.Concat(Model.Pedido.Cidade?.nome ?? "", Model.Pedido.Estado != null ? "/" + Model.Pedido.Estado.sigla : ""), new { @class = "form-control input-sm", id = "cidade-entrega" })
            </div>
            <div class="clearfix"></div>
            
            @*
            <div class="col-xs-12">
                <label>Receber Pagamento na entrega</label>
                @Html.DropDownListFor(m => m.Pedido.flagPagamentoNaEntrega, ComboHelper.selectListTrueFalse(Model.Pedido.flagPagamentoNaEntrega), "...", new { @class = "form-control input-sm" })
            </div>
            <div class="clearfix"></div>

            <h4 class="separator-form">Dados de agendamento da entrega</h4>
            <div class="col-md-4">
                <label>Data Limite de Entrega</label>
                @Html.TextBoxFor(m => m.Pedido.dtAgendamentoEntrega, new { @class = "form-control input-sm input-datepicker", alt = "date", id = "" })
            </div>
            <div class="col-md-4">
                <label>Período</label>
                @Html.DropDownListFor(m => m.Pedido.flagPeriodo, PedidoEntregaHelper.getComboPedidoEntrega(Model.Pedido.flagPeriodo), new { @class = "form-control input-sm", alt = "date", id = "" })
            </div>*@
            <div class="clearfix"></div><br />
            <div class="col-md-12">
                
                <div class="text-right">
                    <button type="button" class="btn btn-primary btn-sm link-loading" onclick="PedidoCadastroFrete.calcularFrete();">
                        <i class="fa fa-truck"></i> Calcular Frete
                    </button>
                </div>

            </div>
            <div class="clearfix"></div>

        </div>
        <div class="clearfix"></div>

    </div>

</div>