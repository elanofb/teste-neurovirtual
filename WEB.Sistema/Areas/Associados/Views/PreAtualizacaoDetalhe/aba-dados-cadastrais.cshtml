@model WEB.Areas.Associados.ViewModels.AssociadoPreAtualizacaoCadastroPFForm
@using DAL.Configuracoes.Const
@using DAL.ConfiguracoesAssociados
@using DAL.Permissao.Security.Extensions
@using MvcFlashMessages
@using WEB.Areas.ConfiguracoesAssociados.Helpers

@{
    Layout = null;
}

<div class="tab-pane active" id="@(IsPost ? "" : "tab-dados-cadastrais")">
    @Html.RenderFlash()
    <div class="row">
        
        @using (Ajax.BeginForm("salvarCadastro", "AssociadoCadastroPF", new{Area = "Associados"}, new AjaxOptions{HttpMethod = "POST", UpdateTargetId = "", InsertionMode = InsertionMode.Replace, OnSuccess = "AssociadoPreAtualizacaoCadastro.onSuccessForm"}, new{@class = "cadastro"})){

            @Html.ValidationSummary(false)
            { Html.EnableClientValidation(false); }
            @Html.HiddenFor(m => m.Associado.id)
            @Html.HiddenFor(m => m.flagRetornoAjax) 
            
            if (Model.listaGrupos.Any()){
                foreach (var OGrupo in Model.listaGrupos){
                    @boxGrupoCampos(OGrupo)
                }
                <div class="clearfix"></div><br/>
                <div class="col-sm-12">
                    
                    @if (Model.Associado.id == 0 || (Html.temPermissao(User.idPerfil(), "salvar-cadastro", "AssociadoCadastroPF", "Associados") && Model.Associado.id > 0)){
                        <div class="row margin-top-10">
                            <div class="col-sm-6">
                                <p class="text-left">
                                    <button onclick="AssociadoPreAtualizacaoCadastro.finalizarAnalise('@Model.Associado.id', false)" type="button" class="btn btn-md btn-danger link-loading"><i class="far fa-ban"></i> Reprovar Alteração e Finalizar Análise</button>
                                </p>
                            </div>
                                                    
                            <div class="col-sm-6">
                                <p class="text-right">
                                    <button type="submit" name="enviar" class="btn btn-md btn-success link-loading"><i class="far fa-check"></i> Alterar Dados e Finalizar Análise</button>
                                </p>
                            </div>
                        </div>                                                
                    }

                </div>
            }else{
                <div class="col-sm-12">
                    <div class="alert alert-warning">
                        <div class="text-center">Não existem configurações de cadastro disponíveis.</div>
                    </div>
                </div>
            }
            <div class="clearfix"></div><br/>
        }
    </div>
</div>

@helper boxGrupoCampos(ConfiguracaoAssociadoCampoGrupo OGrupo) {

var listaCampos = Model.listaCampos.Where(x => x.idAssociadoCampoGrupo == OGrupo.id).ToList();

    if (!listaCampos.Any()) {
        return;
    }
    
    <div class="@(OGrupo.cssBoxGrupo.isEmpty() ? "col-sm-12" : OGrupo.cssBoxGrupo)">        
        <h4 class="separator-form-icon"><i class="far fa-edit"></i> @OGrupo.descricao</h4>
        
        <div class="row">
            @foreach (var OCampo in listaCampos){
                @boxCampo(OCampo)
            }
        </div>
    </div>
    @Html.Raw(OGrupo.htmlAposBox)
}

@helper boxCampo(ConfiguracaoAssociadoCampo OCampo) {
        
    if (OCampo.idTipoCampo == ConfiguracaoTipoCampoConst.HIDDEN) {
        @Html.buildField(OCampo, false)
        return;
    }
    
    <div class="@OCampo.cssClassBox">
        
        @(OCampo.flagObrigatorio == true ? Html.labelRequired(OCampo.label) : Html.Label(OCampo.label))
        
        @Html.buildField(OCampo, false)
        
        @exibirValorAlterado(OCampo.valorPadrao, OCampo.valorAtual)
        
        @if (!OCampo.textoInstrucoes.isEmpty()){
            @Html.instrucao(OCampo.textoInstrucoes)
        }
        @Html.Raw(OCampo.htmlAposCampo)
    </div>

    @Html.Raw(OCampo.htmlAfterBox)
}

@functions{

    private IHtmlString exibirValorAlterado(string valorAntigo, string valorAtual){
        
        if (valorAntigo.isEmpty()){
            return Html.Raw("");
        }
                     
        if (valorAntigo == valorAtual){
            return Html.Raw("");
        }
        
        string valorAntigoExibicao = $"<span data-toggle=\"tooltip\" title=\"Valor Atual\" class=\"text-red font-italic fs-12\"><i class=\"fas fa-eraser\"></i> { valorAntigo }</span>";          
        
        return  Html.Raw(valorAntigoExibicao);
    }

}
